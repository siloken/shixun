<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

    <!--取消拦截的url地址-->
<!--    <security:http pattern="WEB-INF/pages/success.jsp" security="none"/>
    <security:http pattern="WEB-INF/pages/failer.jsp" security="none"/>-->
    <security:http pattern="/citizen/toregister" security="none"/>
    <security:http pattern="/company/toregister" security="none"/>
    <security:http pattern="/citizen/register" security="none"/>
    <security:http pattern="/company/register" security="none"/>
    <security:http pattern="/admin/checkmessage" security="none"/>

    <!--
        auto-config:这个是一个自动配置过滤器(Filter)的属性
        use-expressions:"是否使用spel表达式"，如果使用表达式：hasRole('ROLE_USER')
    -->
    <security:http auto-config="false" use-expressions="true" entry-point-ref="loginEntryPoint">
        <!-- 配置拦截的请求地址，任何请求地址都必须有ROLE_USER的权限 -->
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/citizen/**" access="hasRole('ROLE_CITIZEN')"/>
        <security:intercept-url pattern="/company/**" access="hasAnyRole('ROLE_COMPANY')"/>
<!--            登录页面配置
            login-page:登录页面
            login-processing-url:处理登录的地址
            default-target-url:登录成功后默认跳转地址
            authentication-failure-url:登录失败跳转地址
        <security:form-login
                login-page="/user/tologin"
                login-processing-url="/login"
                username-parameter="username"
                password-parameter="password"
                authentication-failure-url="/user/failer"
        />&lt;!&ndash;default-target-url="/user/success"&ndash;&gt;-->

        <!-- 自定登录的filter -->
        <security:custom-filter before="FORM_LOGIN_FILTER" ref="userLoginFilter" />
        <!-- 自定登出的filter -->
        <security:custom-filter before="LOGOUT_FILTER" ref="userLogoutFilter" />
        <!--关闭跨域安全请求-->
        <security:csrf disabled="true"/>

        <security:headers>
            <security:frame-options disabled="true"/>
        </security:headers>

        <security:access-denied-handler error-page="/user/failer"/>
<!--        &lt;!&ndash;
            退出配置
            logout-success-url:退出后跳转地址
            invalidate-session:让当前session失效
        &ndash;&gt;
        <security:logout
                logout-success-url="/user/tologin"
                invalidate-session="true"
                logout-url="/logout"
        />-->
    </security:http>

    <!--配置授权信息-->
    <security:authentication-manager alias="authenticationManager"><!--alias="authenticationManager"-->
        <security:authentication-provider user-service-ref="login">
<!--            <security:user-service>
                &lt;!&ndash;
                    配置账号密码，以及该账号的角色信息
                    其中{noop}表示加密的类型,noop则表示不使用任何加密方式
                    PasswordEncoderFactories中有所体现
                &ndash;&gt;
                <security:user name="admin" password="{noop}aaa" authorities="ROLE_USER"/>
            </security:user-service>-->
        </security:authentication-provider>
    </security:authentication-manager>



    <!--密码加密-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- 默认登录页的url -->
    <bean id="loginEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/user/tologin"/>
    </bean>

    <!-- 指定登录filter的实现类 -->
    <bean id="userLoginFilter" class="cn.edu.cqupt.util.UserLoginFilter">
        <property name="filterProcessesUrl" value="/login"/>
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="usernameParameter" value="username"/>
        <property name="passwordParameter" value="password"/>
        <property name="authenticationSuccessHandler">
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
                <!--<property name="defaultTargetUrl" value="/user/success"/>-->
            </bean>
        </property>
        <property name="authenticationFailureHandler">
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <property name="defaultFailureUrl" value="/user/failer"/>
            </bean>
        </property>
    </bean>

    <bean id="userLogoutFilter" class="cn.edu.cqupt.util.UserLogoutFilter">
        <property name="filterProcessesUrl" value="/logout"/>
        <constructor-arg index="0" value="/"/>
        <constructor-arg index="1">
            <array>
                <bean id="securityContextLogoutHandler" class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
                <bean id="customLogoutSuccessHandler" class="cn.edu.cqupt.util.UserLogoutHandler"/>
            </array>
        </constructor-arg>
    </bean>


</beans>
